---
- hosts: virtual_machines
  gather_facts: true

  vars:
    users:
      - name: root
        ssh_keys:
          - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHGGdjHDqECI7pXnoa4FhG39XdFJsSpRbJDADhnPV3Yq ryan5163@WK1Q9J7QX6.local"
      - name: tool
        ssh_keys:
          - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHGGdjHDqECI7pXnoa4FhG39XdFJsSpRbJDADhnPV3Yq ryan5163@WK1Q9J7QX6.local"

  tasks:
    - name: Ensure the users exist
      ansible.builtin.user:
        name: "{{ item.name }}"
        shell: /bin/zsh
      loop: "{{ users }}"

    - name: Add an SSH authorized key for each user
      ansible.posix.authorized_key:
        user: "{{ item.0.name }}"
        state: present
        key: "{{ item.1 }}"
      loop: "{{ lookup('subelements', users, 'ssh_keys') }}"

    - name: Ensure the users have passwordless sudo
      ansible.builtin.lineinfile:
        path: "/etc/sudoers.d/{{ item.name }}"
        line: "{{ item.name }} ALL=(ALL) NOPASSWD:ALL"
        create: true
        validate: visudo -cf %s
        owner: root
        group: root
        mode: '0440'
      loop: "{{ users }}"

    - name: Ensure required packages are installed
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - bridge-utils
          - ca-certificates
          - curl
          - git
          - libosinfo-bin
          - libvirt-clients
          - libvirt-daemon-driver-qemu
          - libvirt-daemon-system
          - python3-pip
          - python3-setuptools
          - qemu-system[-x86 or -arm]
          - software-properties-common
          - virt-manager
          - virtinst
          - virtualenv
          - wget
          - zsh
        state: present
        update_cache: true
      become: true

    - name: Ensure qemu-system-x86 is installed if architecture is x86_64
      ansible.builtin.apt:
        name: qemu-system-x86
        state: present
      become: true
      when: ansible_facts['architecture'] == 'x86_64'

    - name: Ensure qemu-system-arm is installed if architecture is aarch64
      ansible.builtin.apt:
        name: qemu-system-arm
        state: present
      become: true
      when: ansible_facts['architecture'] == 'aarch64'

    - name: Ensure the libvirtd service is available
      ansible.builtin.service:
        name: libvirtd
        state: started
        enabled: true

    - name: Download Ubuntu Cloud Image
      ansible.builtin.get_url:
        url: https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img
        dest: /var/lib/libvirt/boot/jammy-server-cloudimg-amd64.img
        owner: root
        group: root
        mode: '0644'
      become: true
      when: ansible_facts['architecture'] == 'x86_64'

    - name: Download Ubuntu Cloud Image
      ansible.builtin.get_url:
        url: https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-arm64.img
        dest: /var/lib/libvirt/boot/jammy-server-cloudimg-arm64.img
        owner: root
        group: root
        mode: '0644'
      become: true
      when: ansible_facts['architecture'] == 'aarch64'

    - name: Add Docker GPG apt Key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      ansible.builtin.apt_repository:
        repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Update apt and install docker-ce
      ansible.builtin.apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Ensure Docker service is running and enabled
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true
